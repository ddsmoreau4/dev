<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:helpers="clr-namespace:Microsoft.Flow.RPA.Desktop.Shared.UI.Helpers">

    <Storyboard x:Key="FocusEnterStoryboard">
        <DoubleAnimation
            Storyboard.TargetName="Rect"
            Storyboard.TargetProperty="Opacity"
            To="1.0"
            Duration="0:0:0.1" />
    </Storyboard>

    <Storyboard x:Key="FocusExitStoryboard" FillBehavior="Stop">
        <DoubleAnimation
            Storyboard.TargetName="Rect"
            Storyboard.TargetProperty="Opacity"
            To="0.0"
            Duration="0:0:0.1" />
    </Storyboard>

    <Style x:Key="ButtonFocusVisualStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        x:Name="Rect"
                        Margin="-3"
                        Opacity="0.0"
                        SnapsToDevicePixels="true"
                        Stroke="{DynamicResource Button.FocusBorderBrush.Dark}"
                        StrokeThickness="2" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsVisible" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource FocusEnterStoryboard}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource FocusExitStoryboard}" />
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FlatButtonDarkStyle" TargetType="{x:Type ButtonBase}">
        <Setter Property="Background" Value="{DynamicResource Button.BackgroundBrush.Dark}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Button.BorderBrush.Dark}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{DynamicResource Button.ForegroundBrush}" />
        <Setter Property="Padding" Value="10,5,10,5" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisualStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>
                        <Border
                            x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="2"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <ContentPresenter
                            x:Name="PartContentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentStringFormat="{TemplateBinding ContentStringFormat}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource Button.HoverBackgroundBrush.Dark}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource Button.HoverBorderBrush.Dark}" />
                            <Setter Property="Foreground" Value="{DynamicResource Button.ActiveForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource Button.PressedBackgroundBrush.Dark}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource Button.PressedBorderBrush.Dark}" />
                            <Setter Property="Foreground" Value="{DynamicResource Button.ActiveForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource Button.DisabledBackgroundBrush.Dark}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource Button.DisabledBorderBrush.Dark}" />
                            <Setter Property="Foreground" Value="{DynamicResource DisabledTextBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="FlatButtonDarkBorderlessStyle"
        BasedOn="{StaticResource FlatButtonDarkStyle}"
        TargetType="{x:Type ButtonBase}">
        <Setter Property="BorderThickness" Value="0" />
    </Style>

    <Style x:Key="LightMetroWindowButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="{DynamicResource SuiteHeaderButton.BackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource SuiteHeaderButton.ForegroundBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="MaxHeight" Value="32" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Width" Value="46" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" />
                        <ContentControl
                            x:Name="PartContentPresenter"
                            Padding="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentStringFormat="{TemplateBinding ContentStringFormat}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                            Focusable="False"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource SuiteHeaderButton.HoverBackgroundBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource SuiteHeaderButton.ActiveForegroundBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource SuiteHeaderButton.PressedBackgroundBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource SuiteHeaderButton.ActiveForegroundBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource DisabledTextBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="MahApps.Metro.Styles.WindowButton.Close.Light.Win10"
        BasedOn="{StaticResource LightMetroWindowButtonStyle}"
        TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource Button.BackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource Button.ForegroundBrush}" />
        <Setter Property="Height" Value="32" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource WindowCloseButton.HoverBackgroundBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource WindowCloseButton.HoverForegroundBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource WindowCloseButton.HoverBackgroundBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource WindowCloseButton.HoverForegroundBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource DisabledTextBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="DialogCommandButtonStyle"
        BasedOn="{StaticResource LightMetroWindowButtonStyle}"
        TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource Button.BackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource Button.ForegroundBrush}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="IsTabStop" Value="True" />
        <Setter Property="helpers:ControlsHelper.MonitorInputDevice" Value="True" />
        <Setter Property="Height" Value="32" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource Button.HoverBackgroundBrush.Dark}" />
                <Setter Property="Foreground" Value="{DynamicResource Button.ActiveForegroundBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource Button.PressedBackgroundBrush.Dark}" />
                <Setter Property="Foreground" Value="{DynamicResource Button.ActiveForegroundBrush}" />
            </Trigger>
            <Trigger Property="helpers:ControlsHelper.HasVisualFocus" Value="True">
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="BorderBrush" Value="{DynamicResource Button.FocusBorderBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource DisabledTextBrush}" />
            </Trigger>
            <Trigger Property="IsVisible" Value="False">
                <Setter Property="helpers:ControlsHelper.MonitorInputDevice" Value="False" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>