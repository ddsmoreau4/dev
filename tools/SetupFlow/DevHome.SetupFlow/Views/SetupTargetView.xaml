<?xml version="1.0" encoding="utf-8"?>
<UserControl
    x:Class="DevHome.SetupFlow.Views.SetupTargetView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:setupControls="using:DevHome.SetupFlow.Controls"
    xmlns:devEnvModels="using:DevHome.SetupFlow.Models.Environments"
    xmlns:devViewModels="using:DevHome.SetupFlow.ViewModels.Environments"
    xmlns:devEnvCustomControls="using:DevHome.Common.Environments.CustomControls" 
    xmlns:devCommonModels="using:DevHome.Common.Environments.Models" 
    xmlns:converters="using:CommunityToolkit.WinUI.Converters"
    xmlns:ic="using:Microsoft.Xaml.Interactions.Core"
    xmlns:devEnvSelectors="using:DevHome.SetupFlow.Selectors.Environments"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:labs="using:CommunityToolkit.Labs.WinUI"
    mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="ms-appx:///DevHome.Common/Environments/Templates/EnvironmentsTemplates.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <converters:BoolNegationConverter x:Key="BoolNegationConverter" />
            <converters:BoolToVisibilityConverter x:Key="CollapsedWhenTrueBoolToVisibilityConverter" TrueValue="Collapsed" FalseValue="Visible"/>
            <converters:EmptyCollectionToObjectConverter x:Key="NegatedEmptyCollectionVisibilityConverter" EmptyValue="Visible" NotEmptyValue="Collapsed"/>
            <converters:EmptyCollectionToObjectConverter x:Key="EmptyCollectionVisibilityConverter" EmptyValue="Collapsed" NotEmptyValue="Visible"/>
            <converters:EmptyObjectToObjectConverter x:Key="EmptyObjectToObjectConverter" NotEmptyValue="Visible" EmptyValue="Collapsed"/>
            <converters:EmptyStringToObjectConverter x:Key="EmptyStringToObjectConverter" NotEmptyValue="Visible" EmptyValue="Collapsed"/>

            <!--- Template for all horizontal cards on the setup target page. -->
            <DataTemplate x:Key="HorizontalCardForSetupTargetPage" x:DataType="devViewModels:ComputeSystemCardViewModel">
                <ListViewItem
                    DataContext="{Binding}"
                    IsSelected="{Binding IsSelected, Mode=OneWay}"
                    HorizontalAlignment="Stretch"
                    AutomationProperties.ItemStatus="Loaded">
                    <Grid
                        Style="{StaticResource HorizontalCardRootForSetupTargetFlow}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                                <devEnvCustomControls:CardHeader
                                    Grid.Row="0"
                                    HeaderCaption="{x:Bind ComputeSystemProviderName, Mode=OneWay}"
                                    HeaderIcon="{x:Bind ComputeSystemProviderImage, Mode=OneWay}"
                                    Margin="0 -5 0 10"/>
                                <devEnvCustomControls:CardBody
                                    Grid.Row="1"
                                    ComputeSystemTitle="{Binding ComputeSystemTitle, Mode=OneWay}"
                                    ComputeSystemImage="{Binding ComputeSystemImage, Mode=OneWay}"
                                    StateColor="{Binding StateColor, Mode=OneWay}"
                                    CardState="{Binding CardState, Mode=OneWay}"
                                    ComputeSystemProperties="{Binding ComputeSystemPropertiesForCardUI, Mode=OneWay}">
                                <devEnvCustomControls:CardBody.ComputeSystemPropertyTemplate>
                                    <!-- Properties template for compute system properties.-->
                                    <DataTemplate x:DataType="devCommonModels:CardProperty">
                                        <Grid
                                            HorizontalAlignment="Stretch"
                                            Margin="0 0 5 0">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="4*" />
                                                    <ColumnDefinition Width="6*" />
                                                </Grid.ColumnDefinitions>
                                                <Image
                                                    Grid.Column="0"
                                                    Margin="0 0 10 0"
                                                    Visibility="{x:Bind Icon, Mode=OneWay, Converter={StaticResource EmptyObjectToObjectConverter}}"
                                                    Source="{x:Bind Icon, Mode=OneWay}"
                                                    Width="{StaticResource ComputeSystemIcon12px}"
                                                    Height="{StaticResource ComputeSystemIcon12px}"
                                                    HorizontalAlignment="Left"
                                                    VerticalAlignment="Center"
                                                    MaxWidth="50"/>
                                                <TextBlock
                                                    Grid.Column="1"
                                                    Margin="0 0 5 0"
                                                    Visibility="{x:Bind Title, Mode=OneWay, Converter={StaticResource EmptyObjectToObjectConverter}}"
                                                    Text="{x:Bind Title, Mode=OneWay}"
                                                    TextTrimming="CharacterEllipsis"
                                                    HorizontalAlignment="Left"
                                                    VerticalAlignment="Center"
                                                    IsTextSelectionEnabled="True"/>
                                                <TextBlock
                                                    Grid.Column="2"
                                                    Visibility="{x:Bind Value, Mode=OneWay, Converter={StaticResource EmptyObjectToObjectConverter}}"
                                                    Text="{x:Bind Value, Mode=OneWay}"
                                                    TextTrimming="CharacterEllipsis"
                                                    HorizontalAlignment="Left"
                                                    VerticalAlignment="Center"
                                                    IsTextSelectionEnabled="True"/>    
                                        </Grid>
                                    </DataTemplate>
                                </devEnvCustomControls:CardBody.ComputeSystemPropertyTemplate>
                            </devEnvCustomControls:CardBody>
                        </Grid>
                    </Grid>
                </ListViewItem>
            </DataTemplate>

            <DataTemplate x:Key="ComputeSystemContainerHeaderTemplate" x:DataType="devEnvModels:ComputeSystemsListViewModel">
                <StackPanel Orientation="Horizontal"
                    Margin="0 10 0 10"
                    VerticalAlignment="Center">
                    <TextBlock 
                        Text="{x:Bind DisplayName, Mode=OneWay}"
                        Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                        Margin=" 0 0 0 0"
                        IsTextSelectionEnabled="True"/>
                    <TextBlock 
                        Margin="7 0 0 0"
                        Text="{x:Bind FormattedDeveloperId, Mode=OneWay}"
                        Foreground="{ThemeResource TextFillColorTertiaryBrush}"
                        Style="{ThemeResource BodyTextBlockStyle}"
                        IsTextSelectionEnabled="True"/>
                </StackPanel>
            </DataTemplate>

            <DataTemplate x:Key="ComputeSystemContainerShimmerHeaderTemplate" x:DataType="devEnvModels:ComputeSystemsListViewModel">
                <StackPanel Orientation="Horizontal"
                    Margin="5 30 0 10"
                    VerticalAlignment="Center">
                    <labs:Shimmer
                        Width="100"
                        Height="20"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Margin="0 0 10 0"/>
                    <labs:Shimmer
                         Width="100"
                         Height="20"
                         HorizontalAlignment="Left"
                         VerticalAlignment="Center"
                         Margin="0 0 0 0"/>
                </StackPanel>
            </DataTemplate>

            <!-- Listview Template for showing the Environment cards within a ComputeSystemsListViewModel object. -->
            <DataTemplate x:Key="ComputeSystemLoadedTemplate" x:DataType="devEnvModels:ComputeSystemsListViewModel">
                <ListView
                    x:Name="EnvironmentList"
                    AutomationProperties.Name="{Binding AccessibilityName, Mode=OneWay}"
                    HeaderTemplate="{StaticResource ComputeSystemContainerHeaderTemplate}"
                    DataContext="{Binding}"
                    ItemsSource="{x:Bind ComputeSystemCardAdvancedCollectionView, Mode=OneWay}"
                    SelectionMode="Single"
                    ItemTemplate="{StaticResource HorizontalCardForSetupTargetPage}"
                    Margin="0 0 0 10"
                    ItemContainerStyle="{StaticResource HorizontalCardListViewItemContainerStyle}"
                    IsMultiSelectCheckBoxEnabled="False"
                    SelectedItem="{x:Bind SelectedItem, Mode=OneWay}">
                    <i:Interaction.Behaviors>
                        <ic:EventTriggerBehavior EventName="SelectionChanged">
                            <ic:InvokeCommandAction  
                                Command="{Binding ContainerSelectionChangedCommand}"  
                                CommandParameter="{Binding SelectedItem, ElementName=EnvironmentList}"/>
                        </ic:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                </ListView>
            </DataTemplate>

            <!-- Template for showing the shimmer effect when the horizontal cards are loading. -->
            <DataTemplate x:Key="ComputeSystemLoadingTemplate" x:DataType="devEnvModels:ComputeSystemsListViewModel">
                <ListView
                    AutomationProperties.Name="SetupTargetLoadingCard"
                    HeaderTemplate="{StaticResource ComputeSystemContainerShimmerHeaderTemplate}"
                    DataContext="{Binding}"
                    SelectionMode="None"
                    ItemTemplate="{StaticResource HorizontalCardRootForSetupTargetFlowShimmerTemplate}"
                    Margin="0 0 0 10"
                    ItemContainerStyle="{StaticResource HorizontalCardListViewItemContainerStyle}">
                    <x:String>Empty value for list since it doesn't need to use any bindings.</x:String>
                    <x:String>Empty value for list since it doesn't need to use any bindings.</x:String>
                </ListView>
            </DataTemplate>

            <!-- Listview Template for showing the error message associated with loading ComputeSystemsListViewModel object. -->
            <DataTemplate x:Key="ComputeSystemLoadingErrorTemplate" x:DataType="devEnvModels:ComputeSystemsListViewModel">
                <ListView
                    AutomationProperties.Name="{x:Bind ErrorText, Mode=OneWay}"
                    HeaderTemplate="{StaticResource ComputeSystemContainerHeaderTemplate}"
                    SelectionMode="None"
                    Margin="0 0 0 10"
                    ItemContainerStyle="{StaticResource HorizontalCardListViewItemContainerStyle}">
                    <ListViewItem
                        IsTabStop="False"
                        DataContext="{Binding}">
                        <StackPanel
                            Margin="0 50 0 50"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">
                            <TextBlock
                                Text="{x:Bind ErrorText}"
                                Foreground="{ThemeResource TextFillColorPrimaryBrush}"
                                Margin="0 0 0 10"
                                HorizontalAlignment="Center"
                                IsTextSelectionEnabled="True"/>
                        </StackPanel>
                    </ListViewItem>
                </ListView>
            </DataTemplate>

            <!-- Listview Template for showing the info message when no EnvironmentCardViewModels were found. -->
            <DataTemplate x:Key="ComputeSystemsNotFoundTemplate">
                <ListView
                    AutomationProperties.Name="SetupTargetNoEnvironmentsFound"
                    AutomationProperties.LiveSetting="Polite"
                    HeaderTemplate="{StaticResource ComputeSystemContainerHeaderTemplate}"
                    SelectionMode="None"
                    Margin="0 0 0 10"
                    ItemContainerStyle="{StaticResource HorizontalCardListViewItemContainerStyle}">
                    <ListViewItem
                        IsTabStop="False"
                        DataContext="{Binding}">
                        <StackPanel
                            Margin="0 50 0 50"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">
                            <TextBlock
                                x:Uid="SetupTargetNoEnvironmentsFound"
                                Foreground="{ThemeResource TextFillColorPrimaryBrush}"
                                FontSize="15"
                                Margin="0 0 0 10"/>
                        </StackPanel>
                    </ListViewItem>
                </ListView>
            </DataTemplate>
        </ResourceDictionary>
    </UserControl.Resources>
    
    <ScrollViewer >
        <StackPanel Spacing="10">
            <!--- Show the "Setup a Target header on the page. -->
            <setupControls:SetupShell 
                x:Uid="SetupShell_SetupTarget"
                Orchestrator="{x:Bind ViewModel.Orchestrator, Mode=OneWay}"
                Foreground="{ThemeResource TextFillColorSecondary}" />

            <Grid
                ColumnSpacing="10"
                Margin="0 0 0 20">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="4*"/>
                    <ColumnDefinition Width="6*"/>
                </Grid.ColumnDefinitions>
                <!--- Show the Filter box on the page on the page. -->
                <TextBox
                    Height="41"
                    Margin="0 0 0 0"
                    x:Name="FilterTextBox"
                    x:Uid="SetupTarget_Filter"
                    Grid.Column="0"
                    Text="{x:Bind ViewModel.ComputeSystemFilterText, Mode=TwoWay}">
                    <i:Interaction.Behaviors>
                        <ic:EventTriggerBehavior EventName="TextChanged">
                            <ic:InvokeCommandAction 
                                Command="{x:Bind ViewModel.FilterTextChangedCommand, Mode=OneWay}"
                                CommandParameter="{Binding Text, ElementName=FilterTextBox}"/>
                        </ic:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                </TextBox>
                <!--- Show the Target Provide icon, text, combo box and the sync button on the page. -->
                <Grid
                    Grid.Column="1"
                    ColumnSpacing="15"
                    Margin="30 0 0 0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <!--- Target Provider text. -->
                    <TextBlock 
                        x:Uid="SetupTarget_TargetProvider"
                        Grid.Column="0"
                        VerticalAlignment="Center"
                        FontSize="16"/>
                    <!--- Combo box with list of installed ComputeSystemProvider. -->
                    <ComboBox
                        x:Uid="SetupTarget_TargetProvider_ComboBox"
                        x:Name="ComputeSystemProviderComboBox"
                        Grid.Column="1"
                        VerticalAlignment="Center"
                        Margin="0 9 0 9"
                        Padding="10 10 0 10"
                        FontSize="16"
                        MinWidth="200"
                        ItemsSource="{x:Bind ViewModel.ProviderComboBoxNamesCollectionView, Mode=OneWay}"
                        SelectedValue="{x:Bind ViewModel.SelectedComputeSystemProviderComboBoxName, Mode=TwoWay}">
                        <i:Interaction.Behaviors>
                            <ic:EventTriggerBehavior EventName="SelectionChanged">
                                <ic:InvokeCommandAction  
                                    Command="{Binding FilterComboBoxChangedCommand, Mode=OneWay}"  
                                    CommandParameter="{Binding SelectedValue, ElementName=ComputeSystemProviderComboBox, Mode=OneWay}"/>
                            </ic:EventTriggerBehavior>
                        </i:Interaction.Behaviors>
                    </ComboBox>
                    <!--- Sort text label -->
                    <TextBlock 
                        x:Uid="SetupTargetSortLabel"
                        Grid.Column="2"
                        VerticalAlignment="Center"
                        FontSize="16"/>
                    <!--- Combo box with list of installed ComputeSystemProvider. -->
                    <ComboBox
                        x:Uid="SetupTargetSortComboBox"
                        x:Name="ComputeSystemsSortComboBox"
                        Grid.Column="3"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Left"
                        HorizontalContentAlignment="Left"
                        MinWidth="200"
                        Margin="0 9 0 9"
                        Padding="10 10 0 10"
                        FontSize="16"
                        ItemsSource="{x:Bind ViewModel.ComputeSystemsSortOptions, Mode=OneWay}"
                        SelectedIndex="{x:Bind ViewModel.SelectedComputeSystemSortComboBoxIndex, Mode=TwoWay}">
                        <i:Interaction.Behaviors>
                            <ic:EventTriggerBehavior EventName="SelectionChanged">
                                <ic:InvokeCommandAction  
                                    Command="{Binding SortComboBoxChangedCommand, Mode=OneWay}"  
                                    CommandParameter="{Binding SelectedIndex, ElementName=ComputeSystemsSortComboBox, Mode=OneWay}"/>
                            </ic:EventTriggerBehavior>
                        </i:Interaction.Behaviors>

                    </ComboBox>
                    <!--- Sync button that will refresh ComputeSystemOwners list. -->
                    <Button
                        x:Uid="SetupTarget_SyncButton"
                        Grid.Column="4"
                        Command="{x:Bind ViewModel.SyncComputeSystemsCommand , Mode=OneWay}"
                        VerticalAlignment="Center"
                        Padding="40 7.5 40 7.5">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <FontIcon 
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Grid.Column="0"
                                Glyph="&#xE72C;" 
                                FontSize="16" 
                                Margin="0 0 10 0"/>
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Grid.Column="1"
                                Text="Sync"
                                Foreground="{ThemeResource TextFillColorPrimaryBrush}"
                                Margin="0 0 5 3"
                                FontSize="16"/>
                        </Grid>
                    </Button>
                </Grid>
            </Grid>
            <StackPanel
                Margin="0">
                <!--- List of ComputeSystemsListViewModel objects. -->
                <StackPanel
                    Visibility="{x:Bind ViewModel.ShouldShowCollectionView, Mode=OneWay}">
                    <ListView 
                        ItemsSource="{x:Bind ViewModel.ComputeSystemsCollectionView, Mode=OneWay}"
                        SelectionMode="None"
                        Margin="-10">
                        <!-- 
                            Prevent ListView from caching and recycling elements in the list by updating the Itemspanel.
                            This is needed because the listview is used to show multiple lists of ComputesSystemCardViewModels.
                            If we don't do this, the listview will recycle the ComputeSystemCardViewModels in the view 
                            which sometimes leads to weird UI artifacts, like the first item in the list being shown for every
                            item in the list after refreshing the list.
                        --> 
                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel></StackPanel>
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                        <ListView.ItemTemplateSelector>
                            <devEnvSelectors:ComputeSystemsListViewModelSelector>
                                <!-- Compute systems loaded template -->
                                <devEnvSelectors:ComputeSystemsListViewModelSelector.ComputeSystemsListViewModelLoadedTemplate>
                                    <DataTemplate>
                                        <ContentPresenter Content="{Binding}" ContentTemplate="{StaticResource ComputeSystemLoadedTemplate}" />
                                    </DataTemplate>
                                </devEnvSelectors:ComputeSystemsListViewModelSelector.ComputeSystemsListViewModelLoadedTemplate>
                                <!-- Compute system provider non-interactable error template -->
                                <devEnvSelectors:ComputeSystemsListViewModelSelector.ComputeSystemsListViewModelLoadingErrorTemplate>
                                    <DataTemplate>
                                        <ContentPresenter Content="{Binding}" ContentTemplate="{StaticResource ComputeSystemLoadingErrorTemplate}" />
                                    </DataTemplate>
                                </devEnvSelectors:ComputeSystemsListViewModelSelector.ComputeSystemsListViewModelLoadingErrorTemplate>
                                <!-- Compute systems not found template -->
                                <devEnvSelectors:ComputeSystemsListViewModelSelector.NoComputeSystemCardViewModelsAvailableTemplate>
                                    <DataTemplate>
                                        <ContentPresenter Content="{Binding}" ContentTemplate="{StaticResource ComputeSystemsNotFoundTemplate}" />
                                    </DataTemplate>
                                </devEnvSelectors:ComputeSystemsListViewModelSelector.NoComputeSystemCardViewModelsAvailableTemplate>
                            </devEnvSelectors:ComputeSystemsListViewModelSelector>
                        </ListView.ItemTemplateSelector>
                    </ListView>
                    <!--- Show shimmers when still loading items in list. -->
                    <StackPanel
                        Visibility="{x:Bind ViewModel.ShouldShowShimmerBelowList, Mode=OneWay}">
                        <ContentControl
                            Content="{Binding}"
                            VerticalAlignment="Stretch"
                            HorizontalAlignment="Stretch"
                            HorizontalContentAlignment="Stretch"
                            ContentTemplate="{StaticResource ComputeSystemLoadingTemplate}"/>
                    </StackPanel>
                </StackPanel>
                <StackPanel
                    Visibility="{x:Bind ViewModel.ShouldShowCollectionView, Mode=OneWay, Converter={StaticResource CollapsedWhenTrueBoolToVisibilityConverter}}">
                    <!--- Show shimmers when list not loaded -->
                    <StackPanel 
                        Margin="-10"
                        Visibility="{x:Bind ViewModel.ComputeSystemLoadingCompleted, Mode=OneWay, Converter={StaticResource CollapsedWhenTrueBoolToVisibilityConverter}}">
                        <ContentControl
                            Content="{Binding}"
                            VerticalAlignment="Stretch"
                            HorizontalAlignment="Stretch"
                            HorizontalContentAlignment="Stretch"
                            ContentTemplate="{StaticResource ComputeSystemLoadingTemplate}"/>
                    </StackPanel>
                    <!--- Show the info message when no ComputeSystemsListViewModel objects were found. -->
                    <StackPanel 
                        Visibility="{x:Bind ViewModel.ComputeSystemLoadingCompleted, Mode=OneWay}"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        Margin="0 100 0 0">
                        <TextBlock
                            x:Uid="SetupTargetNoEnvironmentsFound"
                            Foreground="{ThemeResource TextFillColorPrimaryBrush}"
                            FontSize="15"/>
                    </StackPanel>
                </StackPanel>
            </StackPanel>
        </StackPanel>
    </ScrollViewer>
</UserControl>
